^skywalker o 0 0 A( ) $cs_token = 4096 | 255 | 512 | 131072 | 1024 | 2048 | 24576 $cs_control_main = ~control $cs_control_pre = ~pre_control $cs_control_post = ~xpostprocess $userprompt = ^"%user: >" $botprompt = ^"Luke: " ^addtopic ( ~presentation ) `
^steer_to_domain o 0 0 B( ^domain ) ^if 00q( ^0 = consciousness ) 00+{ ^reuse ( ~consciousness.from_steering_to_consciousness once ) } 02D else 00n( ^0 = uniqueness ) 00%{ ^reuse ( ~uniqueness.from_steering_to_uniqueness once ) } 01j else 00l( ^0 = emotions ) 00@{ ^reuse ( ~emotions2.from_steering_to_emotions once ) } 004 `
^avoid_and_steer o 0 0 B( ^domain ) ^if 00q( ^0 = consciousness ) 00A{ $avoid_consciousness = 1 } 01L else 00n( ^0 = uniqueness ) 00x{ $avoid_uniqueness = 1 } 00Z else 00l( ^0 = emotions ) 00v{ $avoid_emotions = 1 } 004 ^reuse ( ~conversation_steering.steer_to_domain ) `
^steer_to_different_domain o 0 0 B( ^avoid ) ^if 00q( ^0 = consciousness ) 00A{ $avoid_consciousness = 1 } 004 ^if 00l( ^0 = emotions ) 00v{ $avoid_emotions = 1 } 004 ^if 00n( ^0 = uniqueness ) 00x{ $avoid_uniqueness = 1 } 004 ^addtopic ( ~conversation_steering ) ^respond ( ) ^reuse ( conversation_steering.STEER_TO_DOMAIN ) `
^owner p 0 0 B( ^what ) [ ( my *~2 ^0 ) ( I * ~own * ^0 ) ] `
^randomchoice o 0 0 B( ^which ) ^pick ( ^0 ) `
^findrejoinder o 0 0 B( ^tag ) $$result = null $$rule = ^getrule ( tag ^0 ) $$type = ^getrule ( type ^0 ) _0 = ^burst ( $$rule . ) $$topic = _0 $$toprule = _1 $$newrejoin = _2 ^loop ( -1 ) 04k { $$newtag = ^join ( $$topic . $$toprule . $$newrejoin ) $$newrule = ^getrule ( pattern $$newtag ) $$newtype = ^getrule ( type $$newtag ) ^if 00Q( $$newtype == $$type and ^match ( $$newrule ) ) 00K{ $$result = $$newtag ^fail ( RULE ) } 00Z else 00q( $$newtype < $$type ) 00q{ ^fail ( RULE ) } 004 $$newrejoin += 1 } `
^donextgambit o 0 0 A( ) $$xrep = %response ^if 00r( $$xrep == %response ) 00C{ ^gambit ( $$currenttopic ) } 004 `
^callback o 0 0 A( ) ^if 00O( %topic != ~hear_a_story and ! $$calledback ) 00!{ ^preprint ( \[ callback=30000 \] ) $$calledback = 1 } 004 `
^fastcallback o 0 0 A( ) ^if 00m( ! $$calledback ) 00Z{ ^preprint ( \[ callback=900 \] ) $$calledback = 1 } 004 `
^internalfact o 0 0 B( ^verb ) ^if 00L( ^0 == member or ^0 == equal or ^0 == is ) 00q{ ^fail ( RULE ) } 004 `
^okgambittopic o 0 0 B( ^topic ) $$tx = ^substitute ( character ^0 ~ "" ) $$tmpclosed = ^join ( $ no $$tx ) $$tmpclosed = ^eval ( $$tmpclosed ) ^if 00s( $$tmpclosed > %input ) 00q{ ^fail ( RULE ) } 04D else 00N( ^substitute ( character ^0 story x FAIL ) ) 00q{ ^fail ( RULE ) } 03y else 00L( ^substitute ( character ^0 job x FAIL ) ) 01M{ $$xt = ^substitute ( character ^0 ~ "" ) $$xt = ^join ( $ $$xt ) ^if 00h( $$xt != 1 ) 00q{ ^fail ( RULE ) } 004 } 019 else 00N( ^substitute ( character ^0 hobby x FAIL ) ) 00q{ ^fail ( RULE ) } 004 `
^cleantopic o 0 0 B( ^topic ) ^if 00A( ^lastused ( $$topic GAMBIT ) ) 00q{ ^fail ( RULE ) } 004 ^okgambittopic ( $$topic ) `
^findclasses o 0 0 B( ^word ) @19 = null $$tmp = ^substitute ( character ^0 " " _ ) $$x = ^join ( ~ $$tmp ) $$x1 = ^join ( ~ $$tmp s ) $$x2 = ^join ( ~ $$tmp list ) $$x3 = ^join ( ~ $$tmp _ words ) @19 = ^query ( direct_sv ^0 correspond ? ) ^if 00s( ^length ( @19 ) >= 1 ) 00b{ } 06! else 00^( ^properties ( $$x ) >= 0 and ^hasanyproperty ( $$x CONCEPT ) ) 00Q{ @19 += ^createfact ( ^0 correspond $$x ) } 05d else 00*( ^properties ( $$x1 ) >= 0 and ^hasanyproperty ( $$x1 CONCEPT ) ) 00R{ @19 += ^createfact ( ^0 correspond $$x1 ) } 03z else 00*( ^properties ( $$x2 ) >= 0 and ^hasanyproperty ( $$x2 CONCEPT ) ) 00R{ @19 += ^createfact ( ^0 correspond $$x2 ) } 01V else 00*( ^properties ( $$x3 ) >= 0 and ^hasanyproperty ( $$x3 CONCEPT ) ) 00R{ @19 += ^createfact ( ^0 correspond $$x3 ) } 004 `
^url_for p 0 0 B( ^thing ) << [ where what give show provide tell have ] [ website URL site page webpage link weblink homepage ] ^0 >> `
^makefact o 0 0 E( ^id ^s ^v ^o ) ^createfact ( ^1 ^2 ^3 FACTDUPLICATE ) ^if 00m( $showfact == 1 ) 00={ ^log ( FILE "tmp/facts.txt" "^   FACT:^0 \[ ^1  ^2 ^3 \] \n" ) } 004 ^if 00m( $showfact == 2 ) 00${ ^log ( OUTPUT_ECHO "^   FACT:^0  \[ ^1  ^2 ^3 \] \n" ) } 004 `
^makefactf o 0 0 F( ^id ^s ^v ^o ^flag ) ^createfact ( ^1 ^2 ^3 FACTDUPLICATE ^4 ) ^if 00m( $showfact == 1 ) 013{ ^log ( FILE "tmp/facts.txt" "^   FACT:^0  \[ ^1  ^2 ^3 ^4 \] \n" ) } 004 ^if 00m( $showfact == 2 ) 00&{ ^log ( OUTPUT_ECHO "^   FACT:^0  \[ ^1  ^2 ^3 ^4 \] \n" ) } 004 `
^use p 0 0 C( ^what ^how ) _~mainsubject * ^1 * _^0 `
^usename o 0 0 B( ^relationship ) ^if 00K( ^query ( direct_vo ? equal ^0 ? user ) ) 01a{ ^if 00m( @0subject == I ) 00f{ you } 00B else ( 1 ) 00l { @0subject } 004 } 01c else ( 1 ) 00? { ^if 00f( ^0 == I ) 00f{ you } 00u else ( 1 ) 00e { ^0 } 004 } 004 `
^equalvoquery o 0 0 C( ^verb ^object ) ^if 00H( ^query ( direct_vo ? ^0 ^1 1 user ) ) 00w{ $$answer = @0subject } 03Z else 00D( ^query ( direct_sv ^1 equal ? ) ) 00={ ^query ( direct_vo ? ^0 @0object 1 user ) $$answer = @0subject } 02i else 00K( ^query ( direct_vo ? equal ^1 1 user ) ) 010{ ^query ( direct_vo ? ^0 @0subject 1 user ) $$answer = @0subject } 00G else ( 1 ) 00q { ^fail ( rule ) } 004 `
^equalsvquery o 0 0 C( ^subject ^verb ) ^if 00H( ^query ( direct_sv ^0 ^1 ? 1 user ) ) 00v{ $$answer = @0object } 03$ else 00K( ^query ( direct_sv ^0 equal ? 1 user ) ) 00+{ ^query ( direct_sv @0object ^1 ? 1 user ) $$answer = @0object } 02h else 00K( ^query ( direct_vo ? equal ^0 ? user ) ) 00={ ^query ( direct_sv @0subject ^1 ? 1 user ) $$answer = @0object } 00G else ( 1 ) 00q { ^fail ( rule ) } 004 `
^equalsoquery o 0 0 C( ^subject ^object ) ^if 00H( ^query ( direct_so ^0 ? ^1 1 user ) ) 00t{ $$answer = @0verb } 077 else 00K( ^query ( direct_sv ^0 equal ? 1 user ) ) 00?{ ^query ( direct_so @0object ? ^1 1 user ) $$answer = @0verb } 05z else 00K( ^query ( direct_vo ? equal ^0 1 user ) ) 00-{ ^query ( direct_so @0subject ? ^1 1 user ) $$answer = @0verb } 03~ else 00K( ^query ( direct_sv ^1 equal ? 1 user ) ) 00?{ ^query ( direct_so ^0 ? @0object 1 user ) $$answer = @0verb } 02f else 00K( ^query ( direct_vo ? equal ^0 1 user ) ) 00-{ ^query ( direct_so ^0 ? @0subject 1 user ) $$answer = @0verb } 00G else ( 1 ) 00q { ^fail ( rule ) } 004 `
^referto p 0 0 B( ^what ) [ ( [ name what which who ] *~4 ^0 ) ] `
^youdothis p 0 0 B( ^which ) !~qwords ( ~aux_verb { ~adverb } you !~preposition * ^0 > ) `
^whereborn p 0 0 B( ^who ) [ ( << what [ nation country nationality citizen ] ^0 >> ) ( << where ^0 [ from born hometown home_town birthplace ] >> ) ( << ^0 [ birthplace hometown home_town ] >> ) ( << ^0 native [ city town village nation country ] >> ) ] `
^queryforsubject p 0 0 D( ^object ^verb ^store ) ^query ( direct_vo ? ^1 ^0 -1 ? ^2 ) `
^queryforobject p 0 0 D( ^subject ^verb ^store ) ^query ( direct_sv ^0 ^1 ? -1 ? ^2 ) `
^favetable t 0 8 E( ^topic ^modifier ^main ^what ) $$x = ^join ( ^1 _ ^2 ) $$mod = ^1 $$main = ^2 ^if 00w( ^properties ( $$x ) != 0 ) 00y{ $$main = $$x $$mod = _ } 004 $$lastfact = ^createfact ( ( $$mod ^0 ^3 ) favorite $$main ) ^addproperty ( $$mod PATTERN_WORD ) ^addproperty ( $$main PATTERN_WORD ) `
^favoritetable o 0 8 E( ^topic ^modifier ^main ^what ) $$x = ^join ( ^1 _ ^2 ) $$mod = ^1 $$main = ^2 ^if 00w( ^properties ( $$x ) != 0 ) 00y{ $$main = $$x $$mod = _ } 004 $$lastfact = ^createfact ( ( $$mod ^0 ^3 ) favorite $$main ) ^addproperty ( $$mod PATTERN_WORD ) ^addproperty ( $$main PATTERN_WORD ) `
^hatetable o 0 8 E( ^topic ^modifier ^main ^what ) $$x = ^join ( ^1 _ ^2 ) $$mod = ^1 $$main = ^2 ^if 00w( ^properties ( $$x ) != 0 ) 00y{ $$main = $$x $$mod = _ } 004 $$lastfact = ^createfact ( ( $$mod ^0 ^3 ) hate $$main ) ^addproperty ( $$mod PATTERN_WORD ) ^addproperty ( $$main PATTERN_WORD ) `
^where_be p 0 0 B( ^what ) [ ( < * where * be * ^0 < ![ not never ] ) ( < * where * ^0 *~2 be < ![ not never ] ) ( < * what * [ place location state country city planet ] * be < ![ not never ] ) ] `
^want_you_go_xxx p 0 0 B( ^where ) ( [ ( you be go * ^0 ) ( let_us_go * ^0 ) ( < want to go * ^0 ) ( you * want * go * ^0 ) ] ) `
^do_you_like p 0 0 B( ^what ) ![ or ~qwords ] do * you * ~like * ^0 `
^list_limit p 0 0 A( ) << [ ( _~place_number ^eval ( $place = _0 $count = _0 ) ) ( _~number ^eval ( $place = null $count = _0 ) ) ( ~noun ^eval ( $place = null $count = 1 ) ) ] >> `
^generate_first_instance o 0 0 C( ^what ^unknown ) ^query ( direct_vo ? ^0 ~country -1 ? @1 ) ^sort ( @1 ) ^loop ( $count ) 00? { _7 = ^first ( @1- ) ^if 00m( $place == null ) 00h{ ^1 \n } 004 } ^if 00e( $place ) 00e{ _8 } 004 $currentcountry = _7 $area = _9 `
^compute_letter o 0 0 D( ^letter ^how ^amount ) ^query ( direct_vo ? lettervalue ^0 1 ) _8 = ^compute ( @0subject ^1 ^2 ) ^query ( direct_sv _8 lettervalue ? 1 ) @0object . `
^generate_last_instance o 0 0 C( ^what ^unknown ) ^query ( direct_vo ? ^0 ~country -1 ? @1 ) ^sort ( @1 ) ^loop ( $count ) 00* { _7 = ^last ( @1- ) ^if 00m( $place == null ) 00h{ ^1 \n } 004 } ^if 00e( $place ) 00e{ _8 } 004 $currentcountry = _7 $area = _9 `
^know_about p 0 0 A( ) =8%tense=present ![ who where why ] [ ( < *~2 [ do_you_know what_do_you_know what_is_there_to_know what_you_know what_do_you_make be_you_take ] { of about on the } { a } ) ( you * ~opinionset { about on of } { a } ) ( like > < * what be ) ( your take on ) ( ~tell me about ) ] `
^whatwork p 0 0 B( ^who ) ![ ideal perfect dream sport ] [ ( << ^0 [ work study job career interest profession for_a_living earn_money ] >> ) ( what * ^0 * do > ) ( what be * ^0 ) ( do ^0 work ) ( what * do * ^0 * do * ~job ) ( what * be * ^0 ~job ) ( what * ^0 work as > ) ( what * do * ^0 * do * earn * ~salary ) ( how * do * ^0 * ~job ) ( how * do * ^0 * earn * ~salary ) ( where * do * ^0 * earn * ~salary ) ( what * do * ^0 * do *~2 > ) ( ^0 < * have < * ~job ) ( << are ^0 working >> ) ] `
^ishaircolor p 0 0 B( ^who ) [ ( ^0 * have * [ fur hair ] < ![ not never ] ) ( be < * ^0 < * [ blonde brunette redhead blond silver ] < ![ not never ] ) ( ![ not never ] << what ^0 hair color >> ) ( ^0 [ fur hair ] < ![ not never ] ) ( ^0 [ fur hair ] *~2 color < ![ not never ] ) ] `
^isweight p 0 0 B( ^who ) [ ( ^0 < * [ weigh weight ] < ![ not never ] ) ( how *~2 [ fat big skinny heavy chubby thin massive ] * ^0 !~noun < ![ not never ] ) ] `
^isheight p 0 0 B( ^who ) [ ( ^0 < * [ tall height short ] < ![ not never ] ) ] `
^iseyecolor p 0 0 B( ^who ) [ ( what be < * ^0 < * eye < * color < ![ not never ] ) ( be < * ^0 eye < ![ not never ] ) ] `
^phonenumber p 0 0 B( ^who ) [ ( ^0 [ phone_number cell_number telephone_number ] < ![ not never ] ) ( ^0 [ phone_number cell_number telephone_number ] *~2 be < ![ not never ] ) ( phone_number < * ^0 < ![ not never ] ) ] `
^haspet p 0 0 B( ^who ) ![ not never ] << ^0 ~own _pet >> `
^showfact o 0 0 A( ) ^repeat ( ) _1 = ^first ( @1+ ) _7 = ^burst ( _1 _|_ ) ^print ( "^    _7 _4 _8 _2 _3  . " ) `
^showfacts o 0 0 A( ) ^loop ( 10 ) 00p { ^showfact ( ) \n } `
^what_is_name p 0 0 B( ^who ) [ ( have ^0 !\'s *~2 name ) ( !~verb ^0 !\'s *~2 name > ) ( what < * ^0 < * [ handle name call given_name ] < !middle < ![ them they ] ) ( who * be * ^0 > ) ( [ what how ] * [ name call refer address ] { to } ^0 ) ( !~family_members ^0 *~2 [ name given_name forename personal_name christian_name ] ) ( tell you * ^0 !\'s *~2 name ) ( < ^0 name > ) ( identify ^0 ) ] `
^what_is_job p 0 0 B( ^who ) [ ( ^0 < * have < * ~job ) ( what * ^0 work as > ) ( what * do * ^0 * do * earn * ~salary ) ( !much how * do * ^0 * ~job ) ( !much how * do * ^0 * earn * ~salary ) ( where * do * ^0 * earn * ~salary ) ( !~like what * do * ^0 * do > ) ( where * do * ^0 * ~job ) ( !earn ^0 *~1 ~job ) ( do ^0 work ) ( [ kind line ] of ~job * ^0 ) ( !earn what * be * ^0 ~job ) ( !earn what * do * ^0 * do * ~job ) ] `
^have_a_job_xxx p 0 0 A( ) [ ( I be ) ( I have a job ) ( I be employed ) ( I job be ) ( I work be ) $$word ] `
^compute_day o 0 0 C( ^day ^amount ) $$amount = ^1 ^query ( direct_vo ? dayvalue ^0 1 ) _8 = ^compute ( @0subject add ^1 ) ^loop ( -1 ) 028 { ^if 00e( _8 > 7 ) 00C{ _8 = ^compute ( _8 sub 7 ) } 01n else 00e( _8 > 0 ) 00p{ ^end ( RULE ) } 00S else ( 1 ) 00C { _8 = ^compute ( _8 add 7 ) } 004 } ^query ( direct_sv _8 dayvalue ? 1 ) $$day = @0object `
^compute_month o 0 0 C( ^month ^amount ) $$amount = ^1 ^query ( direct_vo ? value ^0 1 ) _8 = ^compute ( @0subject add ^1 ) ^loop ( -1 ) 02b { ^if 00f( _8 > 12 ) 00D{ _8 = ^compute ( _8 sub 12 ) } 01o else 00e( _8 > 0 ) 00p{ ^end ( RULE ) } 00T else ( 1 ) 00D { _8 = ^compute ( _8 add 12 ) } 004 } ^query ( direct_sv _8 value ? 1 ) $$month = @0object `
^howoftentable o 0 0 E( ^topic ^verb ^object ^what ) $$lastfact = ^createfact ( ( ^2 ^0 ^3 ) howoften ^1 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) `
^doyoutable o 0 0 E( ^topic ^verb ^object ^say ) $$lastfact = ^createfact ( ( ^1 doyou ^2 ) ^0 ^3 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) `
^what_is_your_favorite p 0 0 B( ^what ) [ ( [ which who what ] * ^0 do you [ think ~like ] *~2 best ) ( ~favorite { ~category } { of } ^0 ) ( [ which who what ] be my ~favorite > ) ( [ which what who ] * you < * [ ~like ~favorite ] < * ^0 ) ( [ who what which ] * be * ~favorite * ^0 ) ( < ~favorite * ^0 ) ( < you ~favorite * ^0 ) ( you have * ~favorite * ^0 ) ( ^0 you ~favorite ) ( name *~2 you *~2 ~favorite * ^0 ) ( particular *~2 ^0 *~2 you enjoy ) ( [ which what who ] * [ you you ] < * [ ~like ~favorite ] < * ^0 ) ( [ who what which ] * be * ~favorite * ^0 ) ( ^0 * be * ~favorite ) ( any *~2 ^0 you * [ ~like ~favorite ] ) ( what ~category { of } * ^0 do you ~like ) ( ~favorite *~2 ~category { of } ^0 ) ( what *~2 ^0 *~2 do you follow ) ] `
^agree p 0 0 A( ) [ ( !not [ ~yes yes ~good_quality_adjectives ~verbal_agree ~agreement_words better ~thinkso ] ) ~emomaybe why_not ] `
^dont_agree p 0 0 A( ) [ ~no ~bad_quality_adjectives ( not *~2 [ ~good_quality_adjectives ~verbal_agree ~agreement_words ] ) ( i *~2 don_'t want ) ] `
^ready p 0 0 A( ) [ ( !not ready ) ^agree ( ) ~feeling_happy ] `
^pause o 0 0 B( ^ms ) ^preprint ( \[ ^join ( callback= ^0 ) \] ) `
^express o 0 0 D( ^expression ^magnitude ^duration ) $command = ^join ( | ^0 , ) ^1 , ^2 | ^preprint ( $command ) `
^goto o 0 0 B( ^topic ) ^addtopic ( ^0 ) ^gambit ( ^0 ) `
^g o 0 0 B( ^topic ) ^disable ( outputrejoinder ) ^goto ( ^0 ) `
^continue_after_pause o 0 0 A( ) ^setrejoinder ( Pause_Continue.CONTINUE_AFTER_PAUSE ) `
^clear_avoided_domains o 0 0 A( ) $avoid_consciousness = 0 $avoid_emotions = 0 $avoid_uniqueness = 0 $all_domains_avoided = 0 `
