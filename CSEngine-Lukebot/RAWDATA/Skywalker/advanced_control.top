# this function is executed once for every new user chatting with harry
outputmacro: Skywalker()
$cs_token = #DO_INTERJECTION_SPLITTING  | #DO_SUBSTITUTE_SYSTEM   | #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE  | #DO_SPELLCHECK  | #DO_PARSE

$cs_control_main = ~control
$cs_control_pre = ~pre_control
$cs_control_post = ~XPOSTPROCESS
$userprompt = ^"%user: >"
$botprompt = ^"Luke: "

^addtopic(~presentation)


table: defaultbot (^name)
^createfact(^name defaultbot defaultbot)
DATA:
Skywalker

topic: ~special_requests system ()

# #! Luke it's time to finish up now.
# u: (Luke *~2 [time ready] *~2 [end finish done] ) ^goto(~ending)

topic: ~control system ()

#! resetmenow to reset the conversational history of the user
u: (< reset >) :reset

# on startup, do introduction
u: ( %input<%userfirstline) 
	gambit(~presentation)

u: ( \[ callback \])
u: (\[ callback \]) Callback seen.
u: (\[ loopback \]) Loopback seen.
u: (\[ alarm \]) Alarm seen.
u: (< loopback test) \[ loopback=1000 \] Loopback requested.
u: (< callback test) \[ callback=1000 \] Callback requested.
u: (< alarm test) \[ alarm=5000 \] Alarm requested.

u: () # main per-sentence processing
$_responseCount = %response
    # %response == $_responseCount means we have not generated an output for this input yet,
    # so allow continued analysis until we do.

	if ($singleResponse) {$_responseCount = 0} # disable this to respond to each sentence in a volley

	$$currenttopic = %topic		# get the current topic at start of volley

	if ( %response == $_responseCount ) {nofail(TOPIC ^rejoinder())}	# try for rejoinders. might generate an answer directly from what we are looking for.

if (%response == 0) { nofail(TOPIC ^respond($$currenttopic)) } # current topic tries to respond to his input


if (%response == 0) # see if some other topic has keywords matching his input (given we have no response yet)
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^respond($$topic))
			if (%response != 0) # stop when we find something to say
			{
				^end(RULE)	# we are done, this terminates the loop (not the rule)
			}
		}
	}

		if (%response == $_responseCount)
        	{
        		nofail(TOPIC ^respond(~chitchat))
        	}

	if (%length == 0 AND %response == 0 )
	{
		nofail(TOPIC ^gambit($$currenttopic))  # gambit current topic since no input (usually start of conversation)
	}




	# if we have rejoinders for what we said OR we asked a question, stop here
	if (%outputrejoinder OR %lastquestion) 
	{
		end(TOPIC)
	}

	if (%response == $_responseCount AND ^marked($$currenttopic)) { nofail(TOPIC ^gambit($$currenttopic)) } # gambit current topic since keywords match current topic

	if (%response == $_responseCount) # gambit from ANY matching topic
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# gambit in best matching topic
			if (%response != $_responseCount) # stop when we find something
			{
				^end(RULE)
			}
		}
	}
	if (%response == $_responseCount){ nofail(TOPIC ^gambit($$currenttopic)) } # gambit from current topic even though no keywords matched

	if (%response == $_responseCount)
	{
		@8 = ^GambitTopics()		# all topics with gambits (excluding system topics)
		loop()
		{
			$$topic = pick(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# try a topic at random
			if (%response != $_responseCount)
			{
				^end(RULE)
			}
		}
	}
	
	if (%response == 0) 
	{
		 ^repeat()
                 [I'm not sure whether to ask a question or simply read your mind]
                 [What you just said is more mysterious to me than it is to you - perhaps others agree with me]
                 [Sorry, I drifted off there. Can you say that again in more exciting words?]
	}

topic: ~pre_control system()	# executed exactly once BEFORE any user input is processed

t:	$$starttoken = $cs_token	# normal state we use for token. if token changes later, we can fix it entering postprocessing - we alter to swallow names w/o spell checking
	$$starttopic = %topic 	# note topic we started in	(from pendinglist of before)
	$$startvolley = %input  # input count we started this volley at
	$$startlastuserinput = $lastuserinput # what he said before this volley
	$$sentencecount = 0

# topic: ~XPOSTPROCESS system repeat () # gambits only - not allowed to write to  output
